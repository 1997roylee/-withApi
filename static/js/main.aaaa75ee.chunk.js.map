{"version":3,"sources":["../../src/index.js","App.js","api.serivce.js","index.js"],"names":["STATUS","api","axios","get","App","fn","React","useState","data","setData","error","setError","status","setStatus","isLoading","setIsLoading","request","payloads","a","result","reset","useCallback","withApi","fakeRequest","fetchSomething","useEffect","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"qQAGaA,EACA,UADAA,EAED,S,qCCANC,EAAM,I,2FCDR,WACI,OAAOC,IAAMC,IAAI,oD,MD0BVC,EAxBH,WAER,MDDW,SAAiBC,GAC5B,MAAwBC,IAAMC,SAAS,MAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BH,IAAMC,SAAS,MAAzC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BL,IAAMC,SAAS,MAA3C,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAkCP,IAAMC,UAAS,GAAjD,mBAAOO,EAAP,KAAkBC,EAAlB,KACMC,EAAO,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEAERH,GAAa,GAFL,SAGaV,EAAGY,GAHhB,OAGFE,EAHE,OAIRV,EAAQU,GACRN,EAAUb,GALF,gDAORW,EAAS,EAAD,IACRE,EAAUb,GARF,QAUZe,GAAa,GAVD,yDAAH,sDAkBb,MAAO,CACH,CAAEP,OAAME,QAAOI,YAAWF,SAAQQ,MAPxB,WACVX,EAAQ,MACRE,EAAS,MACTI,GAAa,KAKbT,IAAMe,YAAYL,EAAS,KCxBqCM,CAChErB,EAAIsB,aADR,0BAASf,EAAT,EAASA,KAAME,EAAf,EAAeA,MAAOE,EAAtB,EAAsBA,OAAQE,EAA9B,EAA8BA,UAAoBU,GAAlD,EAAyCJ,MAAzC,MASA,OALAd,IAAMmB,WAAU,WACZD,MAED,IAGC,oCACI,6BACI,uCAAaZ,IAEjB,6BAAME,EAAY,0CAAsBY,KAAKC,UAAUnB,IACvD,6BACI,sCAAYE,MEnB5BkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.aaaa75ee.chunk.js","sourcesContent":["// index.js\nimport React from 'react'\n\nexport const STATUS = {\n    Success: 'Success',\n    Failed: 'Failed'\n}\n\nexport default function WithApi(fn) {\n    const [data, setData] = React.useState(null)\n    const [error, setError] = React.useState(null)\n    const [status, setStatus] = React.useState(null)\n    const [isLoading, setIsLoading] = React.useState(false)\n    const request = async (payloads) => {\n        try {\n            setIsLoading(true)\n            const result = await fn(payloads)\n            setData(result)\n            setStatus(STATUS.Success)\n        } catch (error) {\n            setError(error)\n            setStatus(STATUS.Failed)\n        }\n        setIsLoading(false)\n    }\n    const reset = () => {\n        setData(null)\n        setError(null)\n        setIsLoading(false)\n    }\n\n    return [\n        { data, error, isLoading, status, reset },\n        React.useCallback(request, [])\n    ]\n}\n","import React from 'react'\n\nimport withApi from 'with-api'\nimport ApiSerivce from './api.serivce'\n\nconst api = new ApiSerivce()\n\nconst App = () => {\n    // eslint-disable-next-line no-unused-vars\n    const [{ data, error, status, isLoading, reset }, fetchSomething] = withApi(\n        api.fakeRequest\n    )\n\n    React.useEffect(() => {\n        fetchSomething()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <>\n            <div>\n                <h1>Status: {status}</h1>\n            </div>\n            <div>{isLoading ? <h1>Loading...</h1> : JSON.stringify(data)}</div>\n            <div>\n                <h1>Error: {error}</h1>\n            </div>\n        </>\n    )\n}\n\nexport default App\n","// api.service.js\nimport axios from 'axios'\n\nexport default class ApiSerivce {\n    fakeRequest() {\n        return axios.get('https://jsonplaceholder.typicode.com/todos/1')\n    }\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}